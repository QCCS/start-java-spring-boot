age="1"
# 多环境配置文件激活属性
spring.profiles.active=dev
#设置接口根路径，所有接口前加上/test
server.servlet.path=/test
# 定位模板的目录
spring.mvc.view.prefix=classpath:/templates/
# 给返回的页面添加后缀名
spring.mvc.view.suffix=.html

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test_spring_boot
spring.datasource.username=root
spring.datasource.password=mac123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5

#多数据源1
spring.datasource.primary.jdbc-url=jdbc:mysql://127.0.0.1:3306/spring_test1
#下面配置jdbcUrl is required with driverClassName
#spring.datasource.primary.url=jdbc:mysql://127.0.0.1:3306/test1
spring.datasource.primary.username=root
spring.datasource.primary.password=mac123
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver
#多数据源2
spring.datasource.secondary.jdbc-url=jdbc:mysql://127.0.0.1:3306/spring_test2
spring.datasource.secondary.username=root
spring.datasource.secondary.password=mac123
spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver

spring.mail.host=smtp.qq.com
spring.mail.username=2565510046@qq.com
spring.mail.password=kkoefhgkyijhecha
spring.mail.default-encoding=UTF-8
spring.mail.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.debug=true 

#配置类驼峰属性与数据库下划线属性的自动转换
mybatis.configuration.map-underscore-to-camel-case=true

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=0


#server.tomcat.uri-encoding=UTF-8

#JPA Configuration:
spring.jpa.database=MySQL
# 查询时是否显示日志,显示sql语句
spring.jpa.show-sql = true
spring.jpa.generate-ddl=true  

#自动重新创建表，只要创建了实体类
#create会删除有的表，重新创建
#spring.jpa.hibernate.ddl-auto=create
#自动重新创建表，只要有表就不创建，只是更新数据
spring.jpa.hibernate.ddl-auto=update

#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy  
#spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MYSQL5Dialect